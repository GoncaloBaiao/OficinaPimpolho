@using Microsoft.AspNetCore.Identity
<!-- Injeta o SignInManager para gerenciamento de login -->
@inject SignInManager<IdentityUser> SignInManager 
<!-- Injeta o UserManager para gerenciamento de usuários -->
@inject UserManager<IdentityUser> UserManager 

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
        <!-- Se o usuário está autenticado -->
    <li class="nav-item">
            <!-- Exibe um link de saudação ao usuário autenticado -->
        <a  class="nav-link text-white" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!</a>
    </li>
    <li class="nav-item">
            <!-- Formulário para fazer logout -->
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link text-white">Logout</button>
        </form>
    </li>
}
else
{
     <!-- Se o usuário não está autenticado -->
    <li class="nav-item">
       <!-- Link para registrar um novo usuário -->
        <a class="nav-link text-black" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
       <!-- Link para fazer login -->
        <a class="nav-link text-black" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
